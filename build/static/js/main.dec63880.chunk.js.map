{"version":3,"sources":["logo.svg","Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","props","randQuote","quote","author","App","useState","quotesArr","setArray","currentQuote","setCurrent","randomize","Math","floor","random","useEffect","fetch","then","response","json","data","quotes","catch","e","console","log","className","src","logo","alt","length","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,MAA0B,iC,eCkB1BA,MAhBf,SAAgBC,GAIb,OAAQ,gCACJ,qCACEA,EAAMC,UAAUC,QAEnB,yCACaF,EAAMC,UAAUE,cC8BpBC,MApCf,WAEE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAmCF,mBAAS,CAACH,MAAM,GAAGC,OAAO,KAA7D,mBAAOK,EAAP,KAAqBC,EAArB,KAEA,SAASC,IACP,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAiBzB,OAVAC,qBAAU,WACRC,MAAM,4IACLC,MAAK,SAACC,GAAD,OAAYA,EAASC,UAAQF,MAAK,SAACG,GAASZ,EAASY,EAAKC,QAC9DX,EAAWU,EAAKC,OAAOV,SACtBW,OAAM,SAAAC,GAAC,OAAEC,QAAQC,IAAR,+BAAoCF,SAChD,IAOA,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACrB,IAAnBtB,EAAUuB,QAAc,8CACJ,IAApBvB,EAAUuB,QAAe,cAAC,EAAD,CAAQ5B,UAAWO,IAC7C,wBAAQiB,UAAU,oBAAoBK,QAAS,kBArBnDrB,EAAWH,EAAUI,WACrBa,QAAQC,IAAI,gBAoBR,kCCvBOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dec63880.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React  from 'react';\r\n\r\nfunction Quotes(props){\r\n  // const [currentQuote, setCurrent] = useState(props.qArr[Math.floor(Math.random() * 101)]);\r\n   \r\n  \r\n   return (<div>\r\n       <blockquote>\r\n        {props.randQuote.quote}\r\n       </blockquote>\r\n      <p>\r\n          Author: {props.randQuote.author}\r\n      </p>\r\n   </div>\r\n   )\r\n   }\r\n\r\n\r\nexport default Quotes;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Quotes  from './Quotes';\r\nimport React,{useState,useEffect} from 'react';\r\n\r\nfunction App() {\r\n\r\n  const [quotesArr, setArray] = useState([]);\r\n  const [currentQuote, setCurrent] = useState({quote:\"\",author:\"\"});\r\n\r\n  function randomize(){\r\n    return Math.floor(Math.random() * 101);\r\n  }\r\n  function newQuote(){\r\n    setCurrent(quotesArr[randomize()]);\r\n    console.log(\"hello there\")\r\n  }\r\n   \r\n  useEffect(()=>{   \r\n    fetch('https://gist.githubusercontent.com/nasrulhazim/54b659e43b1035215cd0ba1d4577ee80/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\r\n    .then((response)=>response.json()).then((data)=> {setArray(data.quotes);\r\n      setCurrent(data.quotes[randomize()]);\r\n    }).catch(e=>console.log(`Error fetching quotes${e}`));\r\n  },[]);\r\n  //currentQuote.quote!==null && console.log(\"its not null\");\r\n  //setCurrent(()=>quotesArr[Math.floor(Math.random() * 101)]);\r\n \r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        {quotesArr.length===0 && <h2>Loading ....</h2>}\r\n        {quotesArr.length !==0 && <Quotes randQuote={currentQuote}/>}\r\n        <button className=\"btn btn-secondary\" onClick={()=>newQuote()}>enlighten me!!</button>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}